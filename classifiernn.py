# -*- coding: utf-8 -*-
"""ClassifierNN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oORdub1gP6jGXVItpPC4-i8gbQSI0hy1

Loading and unpacking of the dataset
"""

"""Checking that Data is accurately presented"""
import tensorflow as tf

tf.config.set_soft_device_placement(True)

data_dir = "./LoadingScreensDataset"
train_ds = tf.keras.utils.image_dataset_from_directory(
  data_dir,
  validation_split=0.1,
  subset="training",
  label_mode="categorical",
  seed=123,
  image_size=(224, 224),
  batch_size=16)
val_ds = tf.keras.utils.image_dataset_from_directory(
  data_dir,
  validation_split=0.1,
  subset="validation",
  label_mode="categorical",
  seed=123,
  image_size=(224, 224),
  batch_size=16)
"""Messed with ZFNet model
"""
print(train_ds.class_names)
model = tf.keras.models.Sequential([
    tf.keras.layers.Conv2D(filters=96, kernel_size=(3,3), input_shape=(224,224,3)),
    tf.keras.layers.MaxPool2D(),
    tf.keras.layers.Conv2D(filters=76, kernel_size=(3,3)),
    tf.keras.layers.MaxPool2D(),
    tf.keras.layers.Conv2D(filters=96, kernel_size=(3,3)),
    tf.keras.layers.MaxPool2D(),
    tf.keras.layers.Conv2D(filters=76, kernel_size=(3,3)),
    tf.keras.layers.MaxPool2D(),
    tf.keras.layers.Conv2D(filters=96, kernel_size=(3,3)),
    tf.keras.layers.MaxPool2D(),
    tf.keras.layers.Conv2D(filters=76, kernel_size=(3,3)),
    tf.keras.layers.MaxPool2D(),
    tf.keras.layers.Flatten(),
    tf.keras.layers.Dropout(0.5),
    tf.keras.layers.Dense(128, activation='relu'),
    tf.keras.layers.Dropout(0.5),
    tf.keras.layers.Dense(20, activation='softmax')
])

model.compile(optimizer=tf.keras.optimizers.Adam(), \
              loss='categorical_crossentropy', \
              metrics=['accuracy', tf.keras.metrics.TopKCategoricalAccuracy(2)])
for i in range(0,1000):
  model.fit(train_ds,
           validation_data=val_ds,
           epochs=1)
  model.save("Weights/supernet"+str(i)+".h5")
